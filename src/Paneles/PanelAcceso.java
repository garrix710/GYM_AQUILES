/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Paneles;

import control.AdmDatos;
import control.ClientesJpaController;
import control.EntrenadorJpaController;
import control_datos.MtCliente;
import control_datos.MtEntrenador;
import control_datos.MtMembresia;
import control_datos.MtUsuarios;
import control_datos.Usuario;
import huella.VerificarHuella;
import huella.huella;
import java.awt.BorderLayout;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import modelo.Clientes;
import modelo.Entrenador;

/**
 *
 * @author abiga
 */
public class PanelAcceso extends javax.swing.JPanel {
private VerificarHuella verificadorHuella;

private final AdmDatos adm;

private Entrenador entrenador;
private final EntrenadorJpaController cEntrenadores;

//Datos persistentes tabla Clientes
private Clientes cliente;
private final ClientesJpaController cClientes;

private final List<Clientes> clientes;
private final List<Entrenador> entrenadores;

private final MtUsuarios mtU;
    /**
     * Creates new form PanelAcceso
     */
    public PanelAcceso() {
        initComponents();
        btnLimpiar.setVisible(false);
    adm = new AdmDatos();
    cEntrenadores = new EntrenadorJpaController(adm.getEmf());
    entrenadores = cEntrenadores.findEntrenadorEntities();
    
    //Inicializacion de datos clientes
    cClientes = new ClientesJpaController(adm.getEmf());
    clientes = cClientes.findClientesEntities();
    System.out.println("Total entrenadores cargados: " + entrenadores.size());
System.out.println("Total clientes cargados: " + clientes.size());
    
    mtU = new MtUsuarios(entrenadores,clientes);
    verificadorHuella = new VerificarHuella();
    
    }

    
    // Inicia la captura en hilo aparte (sin bloquear UI)
    private void iniciarCapturaHuella() {
        new Thread(() -> {
            try {
                verificadorHuella.stop(); // por si estaba activa antes
            } catch (Exception ex) {
                // ignorar
            }

            SwingUtilities.invokeLater(() -> {
                JOptionPane.showMessageDialog(this, "Coloque su dedo en el lector", "Captura", JOptionPane.INFORMATION_MESSAGE);
            });

            try {
                verificadorHuella.obtenerDatosHuella();
                // La captura queda lista para leer la huella
            } catch (Exception ex) {
                SwingUtilities.invokeLater(() -> {
                    JOptionPane.showMessageDialog(this, "Error al iniciar captura: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                });
            }
        }).start();
    }
    
    // Obtiene la huella y busca el usuario
    private void entrarConHuella() {
        new Thread(() -> {
            byte[] datos = verificadorHuella.obtenerDatosHuella();
            if (datos != null) {
                Usuario usuario = mtU.buscarPorHuella(datos);
                SwingUtilities.invokeLater(() -> {
                    if (usuario != null) {
                        mostrarResultado(usuario);
                        verificadorHuella.stop();
                    } else {
                        JOptionPane.showMessageDialog(this, "Usuario no encontrado", "Resultado", JOptionPane.WARNING_MESSAGE);
                    }
                });
            } else {
                SwingUtilities.invokeLater(() -> {
                    JOptionPane.showMessageDialog(this, "No se pudo capturar la huella. Intente de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
                });
            }
        }).start();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtIdentificador = new javax.swing.JTextField();
        panelTarjeta = new javax.swing.JPanel();
        btnEntrarHuella = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnCapturar = new javax.swing.JButton();

        setBackground(new java.awt.Color(38, 38, 38));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 2, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Control de acceso");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre / ID ");

        txtIdentificador.setBorder(null);
        txtIdentificador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdentificadorActionPerformed(evt);
            }
        });
        txtIdentificador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIdentificadorKeyReleased(evt);
            }
        });

        panelTarjeta.setBackground(new java.awt.Color(38, 38, 38));

        javax.swing.GroupLayout panelTarjetaLayout = new javax.swing.GroupLayout(panelTarjeta);
        panelTarjeta.setLayout(panelTarjetaLayout);
        panelTarjetaLayout.setHorizontalGroup(
            panelTarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 452, Short.MAX_VALUE)
        );
        panelTarjetaLayout.setVerticalGroup(
            panelTarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 323, Short.MAX_VALUE)
        );

        btnEntrarHuella.setText("Entrar con huella");
        btnEntrarHuella.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrarHuellaActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnCapturar.setText("Iniciar Captura");
        btnCapturar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapturarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(jLabel2)
                        .addGap(46, 46, 46)
                        .addComponent(txtIdentificador, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addComponent(btnCapturar)
                        .addGap(54, 54, 54)
                        .addComponent(btnEntrarHuella)))
                .addContainerGap(190, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 119, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(panelTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(124, 124, 124))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnLimpiar)
                        .addGap(299, 299, 299))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdentificador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEntrarHuella)
                    .addComponent(btnCapturar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLimpiar)
                .addContainerGap(54, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdentificadorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdentificadorKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String textoBusqueda = txtIdentificador.getText().trim();
            if (!textoBusqueda.isEmpty()) {
                verificarUsuarioPorTexto(textoBusqueda);
            }
            txtIdentificador.setText(""); // Limpiar el campo después de la búsqueda
        }
    }//GEN-LAST:event_txtIdentificadorKeyReleased

    private void txtIdentificadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdentificadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdentificadorActionPerformed

    private void btnEntrarHuellaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrarHuellaActionPerformed
        // TODO add your handling code here:
        entrarConHuella(); 
    }//GEN-LAST:event_btnEntrarHuellaActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // Detener captura actual de huella
    limpiarPanel();

    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void limpiarPanel() {
        verificadorHuella.stop();
        panelTarjeta.removeAll();
        panelTarjeta.revalidate();
        panelTarjeta.repaint();
        txtIdentificador.setText("");
        btnLimpiar.setVisible(false);
    }
    private void btnCapturarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapturarActionPerformed
        iniciarCapturaHuella();
    }//GEN-LAST:event_btnCapturarActionPerformed
private void verificarUsuarioPorTexto(String textoBusqueda) {
        Usuario encontrado = null;

        // 1. Intentar buscar por ID (si es numérico)
        try {
            String id = textoBusqueda.trim(); // Parsear a Integer
            encontrado = mtU.buscarPorId(id); // <--- Pasar Integer directamente
        } catch (NumberFormatException ex) {
            // No es un ID numérico, seguir con la búsqueda por nombre
            System.out.println("No es un ID numérico, buscando por nombre..."); // Para depuración
        }

        // 2. Si no se encontró por ID, intentar buscar por nombre
        if (encontrado == null) {
            List<Usuario> usuariosPorNombre = mtU.buscarPorNombre(textoBusqueda);
            if (!usuariosPorNombre.isEmpty()) {
                if (usuariosPorNombre.size() == 1) {
                    encontrado = usuariosPorNombre.get(0);
                } else {
                    JOptionPane.showMessageDialog(this, "Múltiples usuarios encontrados con ese nombre. Por favor, sea más específico o use el ID/huella.", "Resultado", JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }
        }

        mostrarResultado(encontrado);
    }



// Muestra el usuario encontrado y detiene captura
private void mostrarResultado(Usuario usuario) {
    System.out.println("Total entrenadores cargados: " + entrenadores.size());
System.out.println("Total clientes cargados: " + clientes.size());

    if (usuario == null) {
        JOptionPane.showMessageDialog(null, "Usuario no encontrado", "Resultado", JOptionPane.WARNING_MESSAGE);
        return;
    }

    String tipo = usuario.getTipoUsuario();

    // Establecer BorderLayout para que el panel se ajuste
    panelTarjeta.removeAll();
    panelTarjeta.setLayout(new BorderLayout());

    if ("C".equalsIgnoreCase(tipo)) {
        PanelTarjeta panel = new PanelTarjeta();

        panelTarjeta.add(panel, BorderLayout.CENTER);

        btnLimpiar.setVisible(true);

        int idUsuario = usuario.getId();
        panel.cargarDatosClientes(idUsuario);

    } else if ("E".equalsIgnoreCase(tipo)) {
        PanelTarjetaEntrenador panel = new PanelTarjetaEntrenador();

        panelTarjeta.add(panel, BorderLayout.CENTER);

        btnLimpiar.setVisible(true);

        int idUsuario = usuario.getId();
        panel.cargarDatosClientes(idUsuario);

    } else {
        JOptionPane.showMessageDialog(null, "No se encontró usuario", "Información", JOptionPane.INFORMATION_MESSAGE);
    }

    panelTarjeta.revalidate();
    panelTarjeta.repaint();

    verificadorHuella.stop();
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapturar;
    private javax.swing.JButton btnEntrarHuella;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel panelTarjeta;
    private javax.swing.JTextField txtIdentificador;
    // End of variables declaration//GEN-END:variables
}
